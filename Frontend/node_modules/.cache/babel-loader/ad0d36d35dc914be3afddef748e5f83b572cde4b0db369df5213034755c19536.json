{"ast":null,"code":"var _jsxFileName = \"/home/aashna/webD/test/mythomagic/src/Homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Homepage = () => {\n  _s();\n  const [dynamicText, setDynamicText] = useState(\"CSSnow\");\n\n  // Function to change the text dynamically\n  useEffect(() => {\n    const messages = [\"Welcome!\", \"Enjoy the Snow\", \"Follow @nodws\", \"CSSnow\"];\n    let index = 0;\n    const interval = setInterval(() => {\n      setDynamicText(messages[index]);\n      index = (index + 1) % messages.length; // Loop through the messages\n    }, 2000); // Change text every 2 seconds\n\n    return () => clearInterval(interval); // Cleanup interval on component unmount\n  }, []);\n\n  // Render the dynamic text and snowflakes\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: dynamicText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cssnow\",\n      children: Array.from({\n        length: 9\n      }).map((_, i) => /*#__PURE__*/_jsxDEV(\"span\", {}, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://x.com/nodws\",\n      id: \"btn-twtr\",\n      target: \"_b\",\n      children: \"Follow me @nodws\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(Homepage, \"K0MZGnewrS+NQjLvSikrueIb0F0=\");\n_c = Homepage;\nexport default Homepage;\nvar _c;\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Homepage","_s","dynamicText","setDynamicText","messages","index","interval","setInterval","length","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Array","from","map","_","i","href","id","target","_c","$RefreshReg$"],"sources":["/home/aashna/webD/test/mythomagic/src/Homepage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Homepage = () => {\n    const [dynamicText, setDynamicText] = useState(\"CSSnow\");\n\n    // Function to change the text dynamically\n    useEffect(() => {\n        const messages = [\"Welcome!\", \"Enjoy the Snow\", \"Follow @nodws\", \"CSSnow\"];\n        let index = 0;\n\n        const interval = setInterval(() => {\n            setDynamicText(messages[index]);\n            index = (index + 1) % messages.length; // Loop through the messages\n        }, 2000); // Change text every 2 seconds\n\n        return () => clearInterval(interval); // Cleanup interval on component unmount\n    }, []);\n\n    // Render the dynamic text and snowflakes\n    return (\n        <div>\n            <h1>{dynamicText}</h1>\n            <div className=\"cssnow\">\n                {/* Generate snowflakes */}\n                {Array.from({ length: 9 }).map((_, i) => (\n                    <span key={i}></span>\n                ))}\n            </div>\n            <a href=\"https://x.com/nodws\" id=\"btn-twtr\" target=\"_b\">\n                Follow me @nodws\n            </a>\n        </div>\n    );\n};\n\nexport default Homepage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,QAAQ,CAAC;;EAExD;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMO,QAAQ,GAAG,CAAC,UAAU,EAAE,gBAAgB,EAAE,eAAe,EAAE,QAAQ,CAAC;IAC1E,IAAIC,KAAK,GAAG,CAAC;IAEb,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BJ,cAAc,CAACC,QAAQ,CAACC,KAAK,CAAC,CAAC;MAC/BA,KAAK,GAAG,CAACA,KAAK,GAAG,CAAC,IAAID,QAAQ,CAACI,MAAM,CAAC,CAAC;IAC3C,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,oBACIP,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAKR;IAAW;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBf,OAAA;MAAKgB,SAAS,EAAC,QAAQ;MAAAL,QAAA,EAElBM,KAAK,CAACC,IAAI,CAAC;QAAET,MAAM,EAAE;MAAE,CAAC,CAAC,CAACU,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBAChCrB,OAAA,aAAWqB,CAAC;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACvB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNf,OAAA;MAAGsB,IAAI,EAAC,qBAAqB;MAACC,EAAE,EAAC,UAAU;MAACC,MAAM,EAAC,IAAI;MAAAb,QAAA,EAAC;IAExD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd,CAAC;AAACb,EAAA,CA/BID,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAiCd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}